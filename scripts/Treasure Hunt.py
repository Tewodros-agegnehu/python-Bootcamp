# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15nuch2wMCyeTPsHVMEFkmYPrO_DQgni4

How the Game Works:

1. Create Board: Board size is chosen by the player.

2. Place Treasure & Trap: Treasure (T) and trap (X) are placed randomly.

3. Player Guess: Player guesses the treasureâ€™s location.

4. Check Guess: If the player guesses correctly or falls into the trap, the 5. game ends.

5. Display Final Board: The board is revealed with both the treasure and trap locations.
"""



import random

# Function to create the game board
def create_board(rows, cols):
    return [['*' for _ in range(cols)] for _ in range(rows)]

# Function to display the board
def display_board(board):
    for row in board:
        print(" ".join(row))

# Function to place the treasure on the board
def place_treasure(board, rows, cols):
    """Place the treasure (T) on the board at a random location."""
    row = random.randint(0, rows - 1)
    col = random.randint(0, cols - 1)
    board[row][col] = 'T'
    return (row, col)  # Return the coordinates of the treasure

# Function to place the trap on the board
def place_trap(board, rows, cols, treasure_location):
    """Place the trap (X) on the board at a random location that is not the treasure."""
    while True:
        row = random.randint(0, rows - 1)
        col = random.randint(0, cols - 1)
        if (row, col) != treasure_location:  # Make sure the trap doesn't overlap with the treasure
            board[row][col] = 'X'
            return (row, col)  # Return the coordinates of the trap

# Function to prompt the player for a guess
def get_player_guess(rows, cols):
    """Ask the player to guess the location of the treasure."""
    while True:
        try:
            row = int(input(f"Guess the row (0-{rows - 1}): "))
            col = int(input(f"Guess the column (0-{cols - 1}): "))
            if 0 <= row < rows and 0 <= col < cols:
                return (row, col)
            else:
                print(f"Invalid input. Please enter row and column between 0 and {rows - 1}.")
        except ValueError:
            print("Invalid input. Please enter integers for row and column.")

# Function to check if the player has guessed correctly
def check_guess(guess, treasure_location, trap_location):
    """Check if the player's guess is correct, or if they hit the trap."""
    if guess == treasure_location:
        print("Congratulations! You found the treasure!")
        return True
    elif guess == trap_location:
        print("Oh no! You've been trapped!")
        return True
    else:
        print("No treasure here. Try again!")
        return False

# Main function to play the game
def play_game():
    """Main game loop."""
    rows = int(input("Enter the number of rows for the board: "))
    cols = int(input("Enter the number of columns for the board: "))

    # Create the board
    board = create_board(rows, cols)

    # Place the treasure and trap
    treasure_location = place_treasure(board, rows, cols)
    trap_location = place_trap(board, rows, cols, treasure_location)

    # Display the initial board
    print("\nBoard:")
    display_board(board)

    # Start the game loop
    while True:
        guess = get_player_guess(rows, cols)
        if check_guess(guess, treasure_location, trap_location):
            break  # Exit the loop if the player found the treasure or hit the trap

    # Reveal the final state of the board
    print("\nFinal Board (with treasure and trap revealed):")
    display_board(board)

# Run the game
if __name__ == "__main__":
    play_game()

